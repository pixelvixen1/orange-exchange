////////////////////////////////////////////////////////////////////////////////
// Orange Exchange - Yellow EE style button
// FileName: YellowEEButton.as
// Created by: Angel
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////
import mx.events.EventDispatcher;
import mx.utils.Delegate;
import exchange.model.Model;
import com.greensock.TweenMax;
////////////////////////////////////////////////////////////////////////////////
// CLASS: YellowEEButton
////////////////////////////////////////////////////////////////////////////////
class exchange.ui.YellowEEButton extends MovieClip
{
	////////////////////////////////////////////////////////////////////////////
	// Properties
	////////////////////////////////////////////////////////////////////////////
	private var label_mc			: MovieClip;
	public var label_txt			: TextField;
	private var label_str 			: String;
	private var hit_btn				: Button;
	private var button_bg			: MovieClip;

	// Dispatch
	public var addEventListener		: Function; 
	public var removeEventListener	: Function; 
	public var dispatchEvent		: Function;

	////////////////////////////////////////////////////////////////////////////
	// Constructor
	////////////////////////////////////////////////////////////////////////////
	public function YellowEEButton()
	{		
		EventDispatcher.initialize(this);
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Initialise and Set item ID
	////////////////////////////////////////////////////////////////////////////
	public function init( _button_label : String ) : Void
	{		
		label_str = _button_label;
		setText(_button_label);
		setupUI();
	}

	////////////////////////////////////////////////////////////////////////////
	// Set Text
	////////////////////////////////////////////////////////////////////////////
	public function setText(_button_label : String ) : Void
	{		
		label_txt = label_mc.label_txt;
		label_str = _button_label;
		formatText(label_txt, label_str, false);	
		button_bg._width = Math.ceil( label_mc._x + label_txt.textWidth + 20 );
		hit_btn._width = button_bg._width;
	}
	
	////////////////////////////////////////////////////////////////////////////
	// SET UP UI
	////////////////////////////////////////////////////////////////////////////
	private function setupUI() : Void
	{
		this.hit_btn.onRollOver = Delegate.create(this, buttonRollOver);
		this.hit_btn.onRollOut = Delegate.create(this, buttonRollOut); 
		this.hit_btn.onRelease = Delegate.create(this, buttonReleased); 
	}

	////////////////////////////////////////////////////////////////////////////
	// BUTTON ROLLOVER
	////////////////////////////////////////////////////////////////////////////
	public function buttonRollOver( ) : Void
	{
		TweenMax.to(button_bg, .5, {colorTransform:{tint:0xEBD400, tintAmount:1}});
		this.dispatchEvent({type:"onButtonOver"});
	}
	
	////////////////////////////////////////////////////////////////////////////
	// BUTTON ROLLOUT
	////////////////////////////////////////////////////////////////////////////
	public function buttonRollOut( ) : Void
	{
		TweenMax.to(button_bg, .5, {colorTransform:{tint:0xFFE600, tintAmount:1}});
		this.dispatchEvent({type:"onButtonOut"});
	}
	
	////////////////////////////////////////////////////////////////////////////
	// BUTTON RELEASED
	////////////////////////////////////////////////////////////////////////////
	public function buttonReleased( ) : Void
	{
		this.dispatchEvent( { type:"onButtonClicked" } );
		TweenMax.to(button_bg, 0, {colorTransform:{tint:0xFFE600, tintAmount:1}});
	}
	
	
	////////////////////////////////////////////////////////////////////////////
	// BUTTON ENABLED
	////////////////////////////////////////////////////////////////////////////	
	public function enable():Void
	{
		this.hit_btn.enabled = true;
	}
	////////////////////////////////////////////////////////////////////////////
	// BUTTON DISABLED
	////////////////////////////////////////////////////////////////////////////	
	public function disable():Void
	{
		this.hit_btn.enabled = false;
	}
	
	////////////////////////////////////////////////////////////////////////////
	//FORMAT TEXT FIELD PROPERTIES
	////////////////////////////////////////////////////////////////////////////
	private function formatText(txtF:TextField, txtStr:String, multiline:Boolean, txt_width : Number, _autosize:Boolean ) : Void
	{
		(!isNaN(txt_width)) ? txtF._width = txt_width : null;
		
		(_autosize == undefined) ? _autosize = true : null;
		
		txtF.border = false;
		txtF.background = false;
		txtF.autoSize = _autosize;
		txtF.wordWrap = multiline;
		txtF.selectable = false;
		txtF.multiline = multiline;
		txtF.embedFonts = true;
		txtF.html = true;
		txtF.styleSheet = Model.getInstance().cssFile;
		txtF.condenseWhite = true;
		txtF.htmlText = txtStr;

	}	


}