////////////////////////////////////////////////////////////////////////////////
// FileName: EventsCSS.as
// Created by: Angel 
////////////////////////////////////////////////////////////////////////////////
import mx.events.EventDispatcher;
import mx.utils.Delegate;
import TextField.StyleSheet;

////////////////////////////////////////////////////////////////////////////////
// CLASS : EventsCSS
////////////////////////////////////////////////////////////////////////////////
class exchange.data.EventsCSS
{
	////////////////////////////////////////////////////////////////////////////
	// Properties
	////////////////////////////////////////////////////////////////////////////
	private static var instance			: EventsCSS;
	
	//CSS
	private var cssLocation				: String;
	public var cssFile 					: StyleSheet;  
	
	// Dispatch
	public var addEventListener 		: Function; 
	public var removeEventListener		: Function; 
	public var dispatchEvent			: Function; 
	
	////////////////////////////////////////////////////////////////////////////
	// Private Constructor
	///////////////////////////////////////////////////////////////////////////	
	private function EventsCSS()
	{
		EventDispatcher.initialize(this);
	}

	////////////////////////////////////////////////////////////////////////////
	// Return singleton instance of EventsCSS
	///////////////////////////////////////////////////////////////////////////	
	public static function getInstance() : EventsCSS 
	{
		if (instance == null)
		{
			instance = new EventsCSS();
		}
		return instance;
	}

	////////////////////////////////////////////////////////////////////////////
	// LOAD AND STORE CSS FILE
	////////////////////////////////////////////////////////////////////////////
	public function loadCSS( cssFileLocation : String ) : Void
	{
		cssLocation = cssFileLocation;
		cssFile = new TextField.StyleSheet();
		cssFile.onLoad = Delegate.create(this, cssOnLoad);
		cssFile.load(cssLocation);
	}
	
	////////////////////////////////////////////////////////////////////////////
	// STORE CSS FILE
	////////////////////////////////////////////////////////////////////////////
	public function cssOnLoad( loaded : Boolean) : Void
	{
		 if( loaded ) 
		 { 
			cssFinalised();
		 } 
		 else 
		 {
			 trace("error loading css");
			 cssFile.load(cssLocation);
		 }
		
	}
	
	
	///////////////////////////////////////////////////////////////////////////////////
	// COMPLETE
	//////////////////////////////////////////////////////////////////////////////////
	private function cssFinalised() : Void
	{
		dispatchEvent({type:"cssLoaded"});
	}
	
}//end class