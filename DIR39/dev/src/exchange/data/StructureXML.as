////////////////////////////////////////////////////////////////////////////////
// FileName: StructureXML.as
// Created by: Angel 
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////
import mx.events.EventDispatcher;
import mx.utils.Delegate;

////////////////////////////////////////////////////////////////////////////////
// CLASS: StructureXML
////////////////////////////////////////////////////////////////////////////////
class exchange.data.StructureXML extends Object
{
	
	////////////////////////////////////////////////////////////////////////////
	// Properties
	////////////////////////////////////////////////////////////////////////////
	//XML  
	public var XMLDoc				:XML;
	public var xmlRootNode			:XMLNode;
	public var numOfNodes			:Number;
	public var xmlFileLocation      :String;
	
	// Dispatch
	public var addEventListener		:Function; 
	public var removeEventListener	:Function; 
	public var dispatchEvent		:Function; 


	////////////////////////////////////////////////////////////////////////////
	// Constructor
	////////////////////////////////////////////////////////////////////////////
	public function StructureXML()
	{		
		EventDispatcher.initialize(this);
	}
	
	////////////////////////////////////////////////////////////////////////////
	// LOAD XML
	////////////////////////////////////////////////////////////////////////////
	public function loadXMLfile(xmlFile:String) : Void
	{
			xmlFileLocation = xmlFile;
			XMLDoc = new XML();
			XMLDoc.ignoreWhite = true;
			XMLDoc.onLoad = Delegate.create(this, xmlOnLoad);
			XMLDoc.load(xmlFile);
			//XMLDoc.load(xmlFile + "?" + Math.random());
	}
	
	////////////////////////////////////////////////////////////////////////////
	// ON LOAD XML
	////////////////////////////////////////////////////////////////////////////
	public function xmlOnLoad(success:Boolean): Void
	{
			if (success)
			{
				xmlRootNode = XMLDoc;
				numOfNodes = xmlRootNode.firstChild.childNodes.length;
				XMLLoaded();
			} 
			else 
			{
				XMLFailed();
			}
		
	}
	
	///////////////////////////////////////////////////////////////////////////////////
	// XML LOADED
	//////////////////////////////////////////////////////////////////////////////////
	public function XMLLoaded() : Void
	{
		//trace("structureXMLLoaded");
		this.dispatchEvent({type:"structureXMLLoaded"});
	}

	///////////////////////////////////////////////////////////////////////////////////
	// XML FAILED
	//////////////////////////////////////////////////////////////////////////////////
	public function XMLFailed() : Void
	{
		trace("XMLFailed");
		XMLDoc = new XML();
		XMLDoc.ignoreWhite = true;
		XMLDoc.onLoad = Delegate.create(this, xmlOnLoad);
		XMLDoc.load(xmlFileLocation);
	}

	

	
}//end class