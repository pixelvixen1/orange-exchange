////////////////////////////////////////////////////////////////////////////////
// Project: Orange Exchange issue 38
// FileName: FibreBroadband.as
// Created by: Angel 
// updated : 5 September 2013
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////
import mx.events.EventDispatcher;
import mx.utils.Delegate;

import com.greensock.TweenMax;
import com.greensock.easing.*;

import exchange.ui.Speedometer;
////////////////////////////////////////////////////////////////////////////////
// CLASS: FibreBroadband 
////////////////////////////////////////////////////////////////////////////////
class exchange.sections.fibre_broadband.FibreBroadband extends MovieClip
{
	
	////////////////////////////////////////////////////////////////////////////
	// PROPERTIES
	////////////////////////////////////////////////////////////////////////////
	private static var instance			: FibreBroadband;
	public var page_name 				: String = "fibre_broadband";
	
	//on stage assets
	public var speedometer_mc			: MovieClip;
	public var combine_btn				: Button;
	public var smallprint_btn			: Button;
	
	// DISPATCH
	public var addEventListener			: Function; 
	public var removeEventListener		: Function; 
	public var dispatchEvent			: Function;	
	////////////////////////////////////////////////////////////////////////////
	// Constructor
	////////////////////////////////////////////////////////////////////////////
	public function FibreBroadband()
	{		
		EventDispatcher.initialize(this);
	}
	
	public static function getInstance() : FibreBroadband 
	{
		return instance;
	}

	////////////////////////////////////////////////////////////////////////////
	// On Load
	///////////////////////////////////////////////////////////////////////////
	public function onLoad() : Void
	{
		instance = this;
		initPage();
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Initialise
	///////////////////////////////////////////////////////////////////////////
	private function initPage() : Void
	{
		findObjects(this);
		hideAssets();
		setupUI();
	}
	
	
	////////////////////////////////////////////////////////////////////////////
	// Hide on stage assets
	///////////////////////////////////////////////////////////////////////////
	public function hideAssets() : Void
	{
		
		
	}	

	////////////////////////////////////////////////////////////////////////////
	// Show assets
	///////////////////////////////////////////////////////////////////////////		
	public function showAssets( ) : Void
	{
		
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Set up UI
	///////////////////////////////////////////////////////////////////////////		
	public function setupUI( ) : Void
	{
		combine_btn.onRelease = Delegate.create(this, gotoCombineAndSave);
		smallprint_btn.onRelease = Delegate.create(this, gotoSmallprint);
	}	
	////////////////////////////////////////////////////////////////////////////
	// Go to Combine and Save section
	///////////////////////////////////////////////////////////////////////////		
	private function gotoCombineAndSave( ) : Void
	{
		gotoAndStop(2);
		Tracker.trackClick(page_name, 'combine_and_save');
	}		
	
	////////////////////////////////////////////////////////////////////////////
	// Go to Smallprint section
	///////////////////////////////////////////////////////////////////////////		
	private function gotoSmallprint( ) : Void
	{
		gotoAndStop(3);
		Tracker.trackClick(page_name, 'smallprint');
	}	
	
	////////////////////////////////////////////////////////////////////////////
	// play the animation for the speedometer
	///////////////////////////////////////////////////////////////////////////		
	public function animateSpeedometer( ) : Void
	{
		speedometer_mc.playAnimation(2, .5);
	}	

	////////////////////////////////////////////////////////////////////////////
	// REMOVE ALL CHILDREN MOVIECLIPS FROM A MOVIECLIP
	///////////////////////////////////////////////////////////////////////////	
	public function emptyMC(mc:MovieClip):Void 
	{
		for (var i in mc) 
		{
			if (typeof(mc[i]) == "movieclip")
			{
				(mc[i]).removeMovieClip();
			}
		}
	}	
	

	////////////////////////////////////////////////////////////////////////////
	// sets init values if the object has an "_x" value
	///////////////////////////////////////////////////////////////////////////	
	public function findObjects(obj:Object):Void
	{
		if (obj._x != undefined)
		{
			setInitValues(obj);
		}
		
		for (var i in obj) 
		{
			if (obj[i]._x != undefined || obj._name == "initValues") 
			{
				setInitValues(obj[i]);
			}
			
			if (typeof(obj[i]) == "movieclip")
			{
				findObjects(obj[i]);
			}
		}
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Sets init values of an Object - Movieclip / Button
	///////////////////////////////////////////////////////////////////////////
	public function setInitValues(obj:Object):Void 
	{
		obj.init = new Object();
		obj.init._name = "initValues";
		
		obj.init._x = obj._x;
		obj.init._y = obj._y;
		obj.init._width = obj._width;
		obj.init._height = obj._height;
		obj.init._alpha = obj._alpha;
		obj.init._rotation = obj._rotation;
		obj.init._xscale = obj._xscale;
		obj.init._yscale = obj._yscale;
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Resets the object to its' initial values.
	///////////////////////////////////////////////////////////////////////////
	public function resetValues(obj:Object):Void 
	{
		if (obj.init != undefined) 
		{
			for (var i in obj.init) 
			{
				if (i != "_name") obj[i] = obj.init[i];
			}
		}
	}
	
	////////////////////////////////////////////////////////////////////////////
	// Set params to a selection of objects 
	///////////////////////////////////////////////////////////////////////////	
	private function setParams(baseName:String, properties:Object):Void 
	{
		var mc:MovieClip;
		for (var i:Number = 0; mc = this[baseName + i]; i++) 
		{
			for (var j:String in properties) 
			{
				if (typeof(properties[j]) == "string") 
				{
					properties[j] = mc[j] + parseFloat(properties[j]);
				}
				mc[j] = properties[j];
			}
		}
	}
	
}